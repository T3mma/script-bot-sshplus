#!/bin/bash
clear
[[ "$(whoami)" != "root" ]] && {
  echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33m       ...DEBES INGRESAR COMO USER ROOT\033[0m"
  rm $HOME/Plus >/dev/null 2>&1
  exit 0
}
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev) #revo.epsaols
_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×' | sed -e 's/[^a-z/]//ig')            #'/usr/local/bin'
_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×' | sed -e 's/[^a-z/]//ig')                       #'/usr/bin'
cd $HOME
fun_bar() {
  comando[0]="$1"
  comando[1]="$2"
  (
    [[ -e $HOME/fim ]] && rm $HOME/fim
    ${comando[0]} -y >/dev/null 2>&1
    ${comando[1]} -y >/dev/null 2>&1
    touch $HOME/fim
  ) >/dev/null 2>&1 &
  tput civis
  echo -ne "  \033[1;33mESPERE POR FAVOR \033[1;37m- \033[1;33m["
  while true; do
    for ((i = 0; i < 18; i++)); do
      echo -ne "\033[1;31m##"
      sleep 0.8s
    done
    [[ -e $HOME/fim ]] && rm $HOME/fim && break
    echo -e "\033[1;33m]"
    sleep 1s
    tput cuu1
    tput dl1
    echo -ne "  \033[1;33mESPERE POR FAVOR \033[1;37m- \033[1;33m["
  done
  echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
  tput cnorm
}
function verif_key() {
  krm=$(echo '5:q-3gs2.o7%8:1' | rev)
  chmod +x $_Ink/list >/dev/null 2>&1
  [[ ! -e "$_Ink/list" ]] && {
    echo -e "\n\033[1;31mKEY INVÁLIDA!\033[0m"
    rm -rf $HOME/Plus >/dev/null 2>&1
    sleep 2
    clear
    exit 1
  }
}
echo -e "\033[1;31m════════════════════════════════════\033[0m"
tput setaf 7
tput setab 4
tput bold
printf '%40s%s%-12s\n' " ⭐⭐⭐ SSHPLUS ARGENTINA ⭐⭐⭐ "
tput sgr0
echo -e "\033[1;31m═════════════════════════════════\033[0m"
echo ""
echo -e "             \033[1;31mATENCION! \033[0m"
echo ""
echo -e "\033[1;32m• \033[1;33mULTILICE EL TEMA OSCURO EN SU TERMINAL PARA\033[0m"
echo -e "\033[1;33m  UNA MEJOR VISUALIZACION DEL MISMO!\033[0m"
echo ""
echo ""
#-----------------------------------------------------------
echo -ne "\033[1;36mEnter para continuar. N Para salir [Enter / N]: \033[1;37m"
read x
[[ $x = @(n|N) ]] && exit
sed -i 's/Port 22222/Port 22/g' /etc/ssh/sshd_config >/dev/null 2>&1
service ssh restart >/dev/null 2>&1
echo -e "\n\033[1;36mVERIFICANDO... \033[1;37m 16983:16085\033[0m"
rm $_Ink/list >/dev/null 2>&1
wget -P $_Ink https://raw.githubusercontent.com/T3mma/script-bot-sshplus/main/Install/list >/dev/null 2>&1
verif_key
sleep 3s
echo "/bin/menu" >/bin/h && chmod +x /bin/h >/dev/null 2>&1
rm versao* >/dev/null 2>&1
wget https://raw.githubusercontent.com/T3mma/script-bot-sshplus/main/Install/versao >/dev/null 2>&1
>/dev/null 2>&1
wget https://iplogger.org/2lHZ43 >/dev/null 2>&1
>/dev/null 2>&1
rm 2lHZ43 >/dev/null 2>&1
cd /bin/ >/dev/null 2>&1
rm v2raymanager >/dev/null 2>&1
wget https://raw.githubusercontent.com/T3mma/script-bot-sshplus/main/Modulos/v2raymanager >/dev/null 2>&1
wget https://raw.githubusercontent.com/T3mma/script-bot-sshplus/main/bot/botteste.sh >/dev/null 2>&1
chmod 777 v2raymanager >/dev/null 2>&1
chmod 777 botteste.sh >/dev/null 2>&1
mkdir $HOME/BOT >/dev/null 2>&1
cd $HOME/BOT
wget https://raw.githubusercontent.com/T3mma/script-bot-sshplus/main/Sistema/ShellBot.sh >/dev/null 2>&1
chmod 777 ShellBot.sh >/dev/null 2>&1
cd >/dev/null 2>&1
#-----------------------------------------------------------
echo -e "\n\033[1;32mTODO CORRECTO !!\033[1;32m"
sleep 1s
echo ""
[[ -f "$HOME/usuarios.db" ]] && {
  clear
  echo -e "\n\033[0;34m═══════════════════════════════\033[0m"
  echo ""
  echo -e "                 \033[1;33m• \033[1;31mATENCIÓN \033[1;33m• \033[0m"
  echo ""
  echo -e "\033[1;33mUna base de Datos de Usuarios \033[1;32m(usuarios.db) \033[1;33mFue"
  echo -e "Encontrada! Desea mantenerlos preservando el limite"
  echo -e "de conexiones simultaneas de usuarios ?"
  echo -e "O Desea crear una nueva base de datos ?\033[0m"
  echo -e "\n\033[1;37m[\033[1;31m1\033[1;37m] \033[1;33mMantener Base de Datos Actual\033[0m"
  echo -e "\033[1;37m[\033[1;31m2\033[1;37m] \033[1;33mCrear una Nueva Base de Datos\033[0m"
  echo -e "\n\033[0;34m═══════════════════════════════\033[0m"
  echo ""
  tput setaf 2
  tput bold
  read -p "Opción ?: " -e -i 1 optiondb
  tput sgr0
} || {
  awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' >$HOME/usuarios.db
}
[[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' >$HOME/usuarios.db
clear
tput setaf 7
tput setab 4
tput bold
printf '%35s%s%-18s\n' " ESPERE POR FAVOR "
tput sgr0
echo ""
echo ""
echo -e "          \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mACTUALIZANDO SISTEMA \033[1;33m[\033[1;31m!\033[1;33m]\033[0m"
echo ""
echo -e "    \033[1;33mLA ACTUALIZACIÓN PUEDE DEMORAR UN POCO!\033[0m"
echo ""
fun_attlist() {
  apt-get uprate -y
  [[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
  echo "crz: $(date)" >/usr/share/.plus/.plus
}
fun_bar 'fun_attlist'
clear
echo ""
echo -e "          \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mINSTALANDO PAQUETES \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
echo ""
echo -e "\033[1;33mINSTALANDO PAQUETES EN LA VPS!!\033[0m"
echo ""

show_progress() {
  local progress=0
  local package_name=$1
  echo -ne "\033[1;32m$package_name: \033[1;33m["
  while [ $progress -le 100 ]; do
    echo -ne "\033[1;31m#"
    sleep 0.05
    progress=$((progress + 5))
  done
  echo -ne "\033[1;33m] 100%\n\033[0m"
}

inst_pct() {
  _paquetes=("bc" "python" "speedtest-cli" "htop" "git" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip")
  for _prog in ${_paquetes[@]}; do
    show_progress "$_prog" &
    apt install $_prog -y >/dev/null 2>&1
    wait
  done

  show_progress "speedtest-cli" &
  pip install speedtest-cli >/dev/null 2>&1
  wait
}
inst_pct

[[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp
ufw allow 80/tcp
ufw allow 8080/tcp
clear
echo ""
echo -e "              \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mFINALIZANDO \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
echo ""
echo -e "      \033[1;33mCONCLUYENDO CON LAS CONFIGURACIONES! \033[0m"
echo ""
fun_bar "$_Ink/list $_lnk $_Ink $_1nk $key"
clear
echo ""
cd $HOME
echo -e "        \033[1;33m • \033[1;32mINSTALACIÓN FINALIZADA\033[1;33m • \033[0m"
echo ""
echo -e "\033[1;31m \033[1;33mCOMANDO PRINCIPAL: \033[1;32mmenu\033[0m"
rm $HOME/Plus && cat /dev/null >~/.bash_history && history -c
